name: CI and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy --workspace -- -D warnings
    
    - name: Run clippy on extension
      run: cargo clippy --target wasm32-unknown-unknown -- -D warnings
    
    - name: Build MCP server
      run: cargo build --package kagi-mcp-server --release
    
    - name: Build extension
      run: cargo build --target wasm32-unknown-unknown --release

  release:
    name: Release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: kagi-mcp-server_Linux_x86_64.tar.gz
          - target: aarch64-unknown-linux-gnu  
            os: ubuntu-latest
            name: kagi-mcp-server_Linux_arm64.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: kagi-mcp-server_Darwin_x86_64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: kagi-mcp-server_Darwin_arm64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: kagi-mcp-server_Windows_x86_64.zip

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
    
    - name: Build binary
      run: cargo build --package kagi-mcp-server --target ${{ matrix.target }} --release
    
    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.name }} kagi-mcp-server
    
    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.name }} kagi-mcp-server.exe
    
    - name: Upload release asset
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}