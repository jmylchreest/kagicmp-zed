name: build release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: build ${{ matrix.target }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-24.04-arm
          #   target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          # - os: macos-latest
          #   target: x86_64-apple-darwin
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install system dependencies (ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev libc6-dev mingw-w64 gcc-multilib g++-mingw-w64 gcc-mingw-w64 tar gzip

      - name: Debug PowerShell
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          where.exe powershell
          where.exe pwsh
          $env:PATH -split ';' | Select-String powershell
          Get-Command powershell | Select-Object Source

      # - name: Install Zig
      #   uses: goto-bus-stop/setup-zig@v2
      #   with:
      #     cache: false

      - name: GoReleaser (build)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: build --clean --single-target
        env:
          TARGET: ${{ matrix.target }}
          PATH: "$PATH:$HOME/.cargo/bin"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: dist/
          retention-days: 1

  release:
    name: GoReleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - name: GoReleaser (release)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # zed-extension:
  #   name: Release Zed Extension
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: huacnlee/zed-extension-action@v1
  #       with:
  #         extension-name: kagimcp-zed
  #         push-to: jmylchreest/zed-extensions
  #       env:
  #         COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
